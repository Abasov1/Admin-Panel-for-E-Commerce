{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axiosClient from '../axios';\nimport axios from 'axios';\nimport router from '../router';\nconst base = 'http://anbar.live/api/';\nconst store = createStore({\n  state: {\n    user: {\n      data: null,\n      token: null,\n      admin: null\n    },\n    loading: true,\n    search: {\n      merchant: null\n    },\n    category: false,\n    api: base\n  },\n  getters: {},\n  mutations: {\n    logout(state) {\n      state.user.data = {};\n      state.user.token = null;\n      localStorage.removeItem('TOKEN');\n    },\n    register(state, data) {\n      state.user.data = data.user;\n      state.user.token = localStorage.setItem('TOKEN', data.token);\n      if (data.user.is_admin) {\n        state.user.admin = true;\n      }\n      state.loading = false;\n    },\n    loadik(state, data) {\n      state.user.data = data.user;\n      state.user.token = localStorage.getItem('TOKEN');\n      if (data.user.role === 'admin' || data.user.role === 'moderator') {\n        state.user.admin = true;\n      }\n      state.loading = false;\n    },\n    endload(state) {\n      localStorage.removeItem('TOKEN');\n      state.loading = false;\n    },\n    setCategory(state, category) {\n      state.category = category;\n    }\n  },\n  actions: {\n    register: async ({\n      commit\n    }, user) => {\n      await axios.post(base + 'register', user).then(response => {\n        commit('register', response.data);\n      });\n    },\n    login: async ({\n      commit\n    }, user) => {\n      await axios.post(base + 'login', user).then(response => {\n        commit('register', response.data);\n      });\n    },\n    alogin: async ({\n      commit\n    }, user) => {\n      await axios.post(base + 'alogin', user).then(response => {\n        commit('register', response.data);\n      });\n    },\n    logout: async ({\n      commit\n    }) => {\n      await axios.post(base + 'logout', null, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n        }\n      }).then(response => {\n        router.push('Salam');\n      }).catch(err => {\n        console.log(err.response.data.message);\n      });\n    },\n    loadUser: async ({\n      commit,\n      dispatch\n    }) => {\n      try {\n        await axios.post(base + 'yoxla', null, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n          }\n        }).then(response => {\n          commit('loadik', response.data);\n          router.push({\n            name: 'Product'\n          });\n        });\n      } catch (error) {\n        commit('endload');\n        router.push({\n          name: 'Salam'\n        });\n      }\n    },\n    addproduct: async ({\n      commit\n    }, selected) => {\n      try {\n        await axios.post(base + 'addproduct', selected, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n          }\n        }).then(response => {\n          alert(response.data.message);\n        });\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n    },\n    addbrand: async ({\n      commit\n    }, selected) => {\n      await axios.post(base + 'addbrand', selected, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n        }\n      }).then(response => {\n        alert(response.data.message);\n      });\n    },\n    addmerchant: async ({\n      commit\n    }, selected) => {\n      await axios.post(base + 'addmerchant', selected, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n        }\n      }).then(response => {\n        alert(response.data.message);\n      });\n    },\n    addcategory: async ({\n      commit\n    }, selected) => {\n      await axios.post(base + 'addcategory', selected, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n        }\n      }).then(response => {\n        commit('setCategory', response.data.category);\n        alert(response.data.message);\n      });\n    },\n    adduser: async ({\n      commit\n    }, selected) => {\n      await axios.post(base + 'adduser', selected, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n        }\n      }).then(response => {\n        alert(response.data.message);\n      }).catch(error => {\n        alert(error.response.data.message);\n      });\n    }\n  },\n  modules: {}\n});\nexport default store;","map":{"version":3,"names":["createStore","axiosClient","axios","router","base","store","state","user","data","token","admin","loading","search","merchant","category","api","getters","mutations","logout","localStorage","removeItem","register","setItem","is_admin","loadik","getItem","role","endload","setCategory","actions","commit","post","then","response","login","alogin","headers","Authorization","push","catch","err","console","log","message","loadUser","dispatch","name","error","addproduct","selected","alert","addbrand","addmerchant","addcategory","adduser","modules"],"sources":["C:/xampp/htdocs/vue-laravel-admin/admin-panel/src/store/index.js"],"sourcesContent":["import {createStore} from 'vuex';\nimport axiosClient from '../axios'\nimport axios from 'axios'\nimport router from '../router'\nconst base = 'http://anbar.live/api/'\nconst store = createStore({\n    state:{\n        user:{\n            data:null,\n            token:null,\n            admin:null\n        },\n        loading: true,\n        search:{\n            merchant:null\n        },\n        category:false,\n        api: base\n    },\n    getters:{},\n    mutations:{\n        logout(state){\n            state.user.data = {};\n            state.user.token = null;\n            localStorage.removeItem('TOKEN')\n        },\n        register(state,data){\n            state.user.data = data.user\n            state.user.token = localStorage.setItem('TOKEN',data.token)\n            if(data.user.is_admin){\n                state.user.admin = true\n            }\n            state.loading = false\n        },\n        loadik(state,data){\n            state.user.data = data.user\n            state.user.token = localStorage.getItem('TOKEN')\n            if(data.user.role === 'admin' || data.user.role === 'moderator'){\n                state.user.admin = true\n            }\n            state.loading = false\n        },\n        endload(state){\n            localStorage.removeItem('TOKEN');\n            state.loading = false\n        },\n        setCategory(state,category){\n            state.category = category\n        }\n    },\n    actions:{\n        register: async ({commit},user) => {\n                await axios.post(base+'register',user)\n                .then((response) => {\n                    commit('register',response.data);\n                })\n            },\n        login: async ({commit},user) => {\n                await axios.post(base+'login',user)\n                .then((response) => {\n                    commit('register',response.data);\n                })\n            },\n        alogin: async ({commit},user) => {\n                await axios.post(base+'alogin',user)\n                .then((response) => {\n                    commit('register',response.data);\n                })\n            },\n        logout: async ({commit}) => {\n                await axios.post(base+'logout',null,{\n                    headers: {\n                        Authorization: 'Bearer '+localStorage.getItem('TOKEN')\n                    }\n                }).then((response) => {\n                    router.push('Salam')\n                }).catch(err=>{\n                    console.log(err.response.data.message)\n                })\n            },\n        loadUser: async({commit,dispatch}) => {\n            try{\n               await axios.post(base+'yoxla',null,{\n                    headers: {\n                        Authorization: 'Bearer '+localStorage.getItem('TOKEN')\n                    }\n                }).then((response)=>{\n                    commit('loadik',response.data)\n                    router.push({name:'Product'})\n                })\n            }catch(error){\n                commit('endload')\n                router.push({name:'Salam'})\n            }\n        },\n        addproduct: async({commit},selected) => {\n            try{\n                await axios.post(base+'addproduct',selected,{\n                    headers: {\n                        Authorization: 'Bearer '+localStorage.getItem('TOKEN')\n                    }\n                }).then((response)=>{\n                    alert(response.data.message)\n                })\n            }catch(error){\n                alert(error.response.data.message)\n            }\n        },\n        addbrand: async({commit},selected) => {\n                await axios.post(base+'addbrand',selected,{\n                    headers: {\n                        Authorization: 'Bearer '+localStorage.getItem('TOKEN')\n                    }\n                }).then((response)=>{\n                    alert(response.data.message)\n                })\n        },\n        addmerchant: async({commit},selected) => {\n            await axios.post(base+'addmerchant',selected,{\n                headers: {\n                    Authorization: 'Bearer '+localStorage.getItem('TOKEN')\n                }\n            }).then((response)=>{\n                alert(response.data.message)\n            })\n        },\n        addcategory: async({commit},selected) => {\n            await axios.post(base+'addcategory',selected,{\n                headers: {\n                    Authorization: 'Bearer '+localStorage.getItem('TOKEN')\n                }\n            }).then((response)=>{\n                commit('setCategory',response.data.category)\n                alert(response.data.message)\n            })\n        },\n        adduser: async({commit},selected) => {\n            await axios.post(base+'adduser',selected,{\n                headers: {\n                    Authorization: 'Bearer '+localStorage.getItem('TOKEN')\n                }\n            }).then((response)=>{\n                alert(response.data.message)\n            }).catch((error)=>{\n                alert(error.response.data.message)\n            })\n        }\n    },\n    modules:{}\n})\n\nexport default store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}