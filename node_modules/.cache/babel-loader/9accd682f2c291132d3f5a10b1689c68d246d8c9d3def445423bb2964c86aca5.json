{"ast":null,"code":"import { Navigation, Pagination, Scrollbar, A11y, Autoplay, Grid } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/vue';\nimport { ref, onMounted, watch } from 'vue';\nimport store from '../../store';\nimport axios from 'axios';\nimport 'swiper/css';\nimport 'swiper/css/pagination';\nexport default {\n  __name: 'Slider',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const modules = [Navigation, Pagination, Scrollbar, A11y, Autoplay, Grid];\n    const sliders = ref(false);\n    const page = ref(0);\n    const ultiUrl = ref(null);\n    const ultiImg = ref(null);\n    const ultiN = ref(null);\n    const file = ref(null);\n    const url = store.state.api;\n    const selectedLanguage = ref(1);\n    onMounted(async () => {\n      await axios.get(url + 'loadslider').then(response => {\n        sliders.value = response.data;\n        setImage();\n      });\n    });\n    const changeImage = async () => {\n      const formData = new FormData();\n      formData.append(\"image\", ultiImg.value);\n      formData.append('id', sliders.value[ultiN.value].id);\n      formData.append('lang', selectedLanguage.value);\n      await axios.post(url + 'changeslider', formData, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('TOKEN')\n        }\n      }).then(response => {\n        if (page.value != 0) {\n          page.value--;\n        }\n        sliders.value = response.data;\n        reset();\n        setImage();\n      });\n    };\n    watch(() => selectedLanguage.value, () => {\n      reset();\n      if (sliders.value) {\n        setImage();\n      }\n    });\n    const setImage = () => {\n      if (selectedLanguage.value === 1) {\n        sliders.value.forEach(item => {\n          item.image = item.az_image;\n        });\n      } else if (selectedLanguage.value === 2) {\n        sliders.value.forEach(item => {\n          item.image = item.en_image;\n        });\n      } else if (selectedLanguage.value === 3) {\n        sliders.value.forEach(item => {\n          item.image = item.ru_image;\n        });\n      }\n    };\n    const setUltiImage = event => {\n      ultiImg.value = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        ultiUrl.value = e.target.result;\n      };\n      reader.readAsDataURL(ultiImg.value);\n      ultiN.value = page.value;\n    };\n    const reset = () => {\n      ultiImg.value = null;\n      ultiUrl.value = null;\n      ultiN.value = null;\n      if (file.value) {\n        file.value.value = \"\";\n      }\n    };\n    const fileClick = () => {\n      file.value.click();\n    };\n    const __returned__ = {\n      modules,\n      sliders,\n      page,\n      ultiUrl,\n      ultiImg,\n      ultiN,\n      file,\n      url,\n      selectedLanguage,\n      changeImage,\n      setImage,\n      setUltiImage,\n      reset,\n      fileClick,\n      get Navigation() {\n        return Navigation;\n      },\n      get Pagination() {\n        return Pagination;\n      },\n      get Scrollbar() {\n        return Scrollbar;\n      },\n      get A11y() {\n        return A11y;\n      },\n      get Autoplay() {\n        return Autoplay;\n      },\n      get Grid() {\n        return Grid;\n      },\n      get Swiper() {\n        return Swiper;\n      },\n      get SwiperSlide() {\n        return SwiperSlide;\n      },\n      ref,\n      onMounted,\n      watch,\n      get store() {\n        return store;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Navigation","Pagination","Scrollbar","A11y","Autoplay","Grid","Swiper","SwiperSlide","ref","onMounted","watch","store","axios","modules","sliders","page","ultiUrl","ultiImg","ultiN","file","url","state","api","selectedLanguage","get","then","response","value","data","setImage","changeImage","formData","FormData","append","id","post","headers","Authorization","localStorage","getItem","reset","forEach","item","image","az_image","en_image","ru_image","setUltiImage","event","target","files","reader","FileReader","onload","e","result","readAsDataURL","fileClick","click"],"sources":["C:/xampp/htdocs/vue-laravel-admin/admin-panel/src/views/admin/Slider.vue"],"sourcesContent":["<template>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n            <h4 class=\"fw-bold py-3 mb-4\">Sliders</h4>\r\n            <div>\r\n                <span @click=\"selectedLanguage = 1\" :style=\"[selectedLanguage === 1 ? 'color:blue;' : '']\" style=\"margin-left:10px;font-size:25px;cursor:pointer\">AZ</span>\r\n                <span @click=\"selectedLanguage = 2\" :style=\"[selectedLanguage === 2 ? 'color:blue;' : '']\" style=\"margin-left:10px;font-size:25px;cursor:pointer\">EN</span>\r\n                <span @click=\"selectedLanguage = 3\" :style=\"[selectedLanguage === 3 ? 'color:blue;' : '']\" style=\"margin-left:10px;font-size:25px;cursor:pointer\">RU</span>\r\n            </div>\r\n            <div class=\"row\">\r\n              <!-- Bootstrap carousel -->\r\n                  <div class=\"col-md\">\r\n                    <div v-if=\"sliders\" id=\"carouselExampleControls\" class=\"carousel slide\" data-ride=\"carousel\">\r\n                      <div class=\"carousel-inner\">\r\n                        <div class=\"carousel-item active\">\r\n                          <img class=\"d-block w-100\" :src=\"url+'images/sliders/'+sliders[page].image\" alt=\"First slide\">\r\n                          <div class=\"carousel-caption d-none d-md-block\">\r\n                               <button @click=\"fileClick\" class=\"btn btn-primary\">change</button>\r\n                               <input @change=\"setUltiImage\" type=\"file\" ref=\"file\" style=\"display: none;\">\r\n                          </div>\r\n                        </div>\r\n                      <a v-if=\"page != 0\" @click.prevent class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                        <span @click=\"page === 0 ? page = 0 : page--\" class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span class=\"sr-only\">Previous</span>\r\n                      </a>\r\n                      <a v-if=\"page + 1 < sliders.length\" @click.prevent class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                        <span @click=\"page + 1 < sliders.length ? page++ : page = page\" class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                        <span class=\"sr-only\">Next</span>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <h4 v-if=\"ultiUrl\" class=\"fw-bold py-3 mb-4\">Will be changed to:</h4>\r\n              <div v-if=\"ultiUrl\" class=\"row\">\r\n                  <div class=\"col-md\">\r\n                    <div id=\"carouselExampleControls\" class=\"carousel slide\" data-ride=\"carousel\">\r\n                      <div class=\"carousel-inner\">\r\n                        <div class=\"carousel-item active\">\r\n                          <img class=\"d-block w-100\" :src=\"ultiUrl\" alt=\"First slide\">\r\n                          <div class=\"carousel-caption d-none d-md-block\">\r\n                               <button @click=\"changeImage\" class=\"btn btn-primary\">Save</button>\r\n                               <button @click=\"reset\" class=\"btn btn-primary\">Reset</button>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          <div class=\"content-backdrop fade\"></div>\r\n        </div>\r\n    </div>\r\n  </template>\r\n<script setup>\r\nimport { Navigation, Pagination, Scrollbar, A11y, Autoplay , Grid } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/vue';\r\nimport { ref,onMounted,watch } from 'vue';\r\nimport store from '../../store';\r\nimport axios from 'axios';\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nconst modules = [Navigation, Pagination, Scrollbar, A11y, Autoplay, Grid];\r\nconst sliders = ref(false)\r\nconst page = ref(0)\r\nconst ultiUrl = ref(null)\r\nconst ultiImg = ref(null)\r\nconst ultiN = ref(null)\r\nconst file = ref(null)\r\nconst url = store.state.api\r\nconst selectedLanguage = ref(1)\r\nonMounted(async() => {\r\n    await axios.get(url+'loadslider').then((response)=>{\r\n        sliders.value = response.data\r\n        setImage()\r\n    })\r\n})\r\nconst changeImage = async() => {\r\n    const formData = new FormData()\r\n    formData.append(\"image\",ultiImg.value)\r\n    formData.append('id',sliders.value[ultiN.value].id)\r\n    formData.append('lang',selectedLanguage.value)\r\n    await axios.post(url+'changeslider',formData,{\r\n            headers: {\r\n                Authorization: 'Bearer '+localStorage.getItem('TOKEN')\r\n            }\r\n        }).then((response)=>{\r\n            if(page.value != 0){\r\n                page.value--\r\n            }\r\n            sliders.value = response.data\r\n            reset()\r\n            setImage()\r\n    })\r\n}\r\nwatch(()=>selectedLanguage.value,()=>{\r\n    reset()\r\n    if(sliders.value){\r\n        setImage()\r\n    }\r\n    \r\n})\r\nconst setImage = () => {\r\n        if (selectedLanguage.value === 1){\r\n            sliders.value.forEach(item => {\r\n                item.image = item.az_image\r\n            })\r\n        }else if (selectedLanguage.value === 2){\r\n            sliders.value.forEach(item => {\r\n                item.image = item.en_image\r\n            })\r\n        }else if (selectedLanguage.value === 3){\r\n            sliders.value.forEach(item => {\r\n                item.image = item.ru_image\r\n            })\r\n        }\r\n    }\r\nconst setUltiImage = (event) => {\r\n    ultiImg.value = event.target.files[0]\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n        ultiUrl.value = e.target.result;\r\n    };\r\n    reader.readAsDataURL(ultiImg.value);\r\n    ultiN.value = page.value\r\n}\r\nconst reset = () => {\r\n    ultiImg.value = null\r\n    ultiUrl.value = null\r\n    ultiN.value = null\r\n    if(file.value){\r\n        file.value.value = \"\"\r\n    }\r\n}\r\nconst fileClick = () => {\r\n    file.value.click()\r\n}\r\n</script>\r\n<style>\r\n  \r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}